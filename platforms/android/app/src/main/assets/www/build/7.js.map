{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAEZ;AAcpC;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAZ3B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;gBACnC,4EAAe,CAAC,QAAQ,EAAE;aAC3B;YACD,OAAO,EAAE;gBACP,yDAAS;aACV;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;AClBc;AACa;AAC4D;AACnH,0DAA0D;AAET;AASjD;IAgBE,mBAAmB,OAAsB,EAChC,IAAU;QACjB,wBAAwB;QACjB,SAA0B,EAC1B,SAA0B,EAC1B,gBAAkC,EAClC,QAAwB,EACvB,WAA8B;QAPxC,iBAmBC;QAnBkB,YAAO,GAAP,OAAO,CAAe;QAChC,SAAI,GAAJ,IAAI,CAAM;QAEV,cAAS,GAAT,SAAS,CAAiB;QAC1B,cAAS,GAAT,SAAS,CAAiB;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,aAAQ,GAAR,QAAQ,CAAgB;QACvB,gBAAW,GAAX,WAAW,CAAmB;QAtBtC,uBAAuB;QACvB,mBAAmB;QACnB,YAAO,GAAG,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC;QAwBpC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACvD,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC;QAEF;;;WAGG;IACL,CAAC;IAED;;;;;;;;;;OAUG;IAEH,yBAAK,GAAL;QAAA,iBAkBC;QAjBK;;;;;;;WAOG;QACL,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACzC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACP,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,SAAS,CAAC,gCAAgC,CAAC,CAAC;YACrD,CAAC;QACL,CAAC,EAAE,eAAK;YACJ,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6BAAS,GAAT,UAAU,IAAI;QACV,yBAAyB;QACzB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAC9B,KAAK,EAAE,QAAQ;YACf,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,CAAC,IAAI,CAAC;SAClB,CAAC,CAAC;QACH,wBAAwB;IAC5B,CAAC;IAED,gCAAY,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;IACD,+CAA+C;IAC/C,8BAAU,GAAV;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACpC,CAAC;IArFU,SAAS;QAJrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;+EAiByC;YAC1B,sEAAI;YAEC,sEAAe;YACf,6EAAe;YACR,sEAAgB;YACxB,wEAAc;YACV,MAAiB;OAvB7B,SAAS,CAsFrB;IAAD,CAAC;AAAA;SAtFY,SAAS,e","file":"7.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController, ViewController, AlertController, LoadingController } from 'ionic-angular';\n//import { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { User } from '../../providers/user/user';\nimport { SignupPage } from '../signup/signup';\nimport { MainPage } from '../main/main';\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n    //loginForm: FormGroup;\n    //loading: Loading;\n    account = {email: '', password: ''};\n\n    /*fieldName: any = {\n        email: 'email',\n        password: 'password'\n    };*/\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n\n  // Our translated text strings\n  private loginErrorString: string;\n\n  constructor(public navCtrl: NavController,\n    public user: User,\n    //public formCtrl: Form,\n    public toastCtrl: ToastController,\n    public alertCtrl: AlertController,\n    public translateService: TranslateService,\n    public viewCtrl: ViewController,\n    private loadingCtrl: LoadingController)\n    //public formBuilder: FormBuilder)\n    {\n\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    })\n\n    /*this.loginForm = this.formBuilder.group({\n      email: [''],\n      password: ['']\n  });*/\n  }\n\n  /*ionViewDidLoad() {\n    // this.user.checkUser();\n    let d = {\n      \"email\" : \"a@a.com\",\n      \"password\" : \"ionic\"\n    }\n    // this.user.login(d)\n    this.user.login(d).subscribe((resp) => {\n      console.log(resp)\n    })\n  }*/\n\n  login() {\n        /*if (this.loginForm.invalid) {\n          this.formCtrl.validateForm(this.loginForm.controls, this.account.login);\n          return console.error('Invalid form');\n        }\n\n        return this.user.login(this.loginForm.value).then(() => {\n          this.navCtrl.push('MainPage');\n      });*/\n      this.user.login(this.account).subscribe((resp) => {\n          if (resp) {\n              this.navCtrl.push('MainPage');\n          } else {\n              this.showError(\"Username or Password incorrect\");\n          }\n      }, error => {\n          this.showError(error.message);\n      });\n  }\n\n  showError(text) {\n      //this.loading.dismiss();\n      let alert = this.alertCtrl.create({\n          title: 'Unable',\n          subTitle: text,\n          buttons: ['OK']\n      });\n      //alert.present(prompt);\n  }\n\n  gotoMainPage () {\n    this.navCtrl.push('MainPage');\n  }\n  // Attempt to login in through our User service\n  gotoSignUp() {\n      this.navCtrl.push('SignupPage');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}